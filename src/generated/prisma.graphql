# source: http://localhost:4466
# timestamp: Tue Nov 20 2018 21:03:43 GMT+0300 (GMT+03:00)

type AggregateBit {
  count: Int!
}

type AggregateEntry {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Bit implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  contentHTML: String!
  contentText: String!
  imageCredit: String
  imageURL: String
  isPublished: Boolean!
  metaTitle: String
  metaDescription: String
  sourceCredit: String
  sourceURL: String
  tags: [String!]!
}

"""A connection to a list of items."""
type BitConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [BitEdge]!
  aggregate: AggregateBit!
}

input BitCreateInput {
  contentHTML: String!
  contentText: String!
  imageCredit: String
  imageURL: String
  isPublished: Boolean!
  metaTitle: String
  metaDescription: String
  sourceCredit: String
  sourceURL: String
  tags: BitCreatetagsInput
}

input BitCreatetagsInput {
  set: [String!]
}

"""An edge in a connection."""
type BitEdge {
  """The item at the end of the edge."""
  node: Bit!

  """A cursor for use in pagination."""
  cursor: String!
}

enum BitOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  contentHTML_ASC
  contentHTML_DESC
  contentText_ASC
  contentText_DESC
  imageCredit_ASC
  imageCredit_DESC
  imageURL_ASC
  imageURL_DESC
  isPublished_ASC
  isPublished_DESC
  metaTitle_ASC
  metaTitle_DESC
  metaDescription_ASC
  metaDescription_DESC
  sourceCredit_ASC
  sourceCredit_DESC
  sourceURL_ASC
  sourceURL_DESC
}

type BitPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  contentHTML: String!
  contentText: String!
  imageCredit: String
  imageURL: String
  isPublished: Boolean!
  metaTitle: String
  metaDescription: String
  sourceCredit: String
  sourceURL: String
  tags: [String!]!
}

type BitSubscriptionPayload {
  mutation: MutationType!
  node: Bit
  updatedFields: [String!]
  previousValues: BitPreviousValues
}

input BitSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [BitSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [BitSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BitSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BitWhereInput
}

input BitUpdateInput {
  contentHTML: String
  contentText: String
  imageCredit: String
  imageURL: String
  isPublished: Boolean
  metaTitle: String
  metaDescription: String
  sourceCredit: String
  sourceURL: String
  tags: BitUpdatetagsInput
}

input BitUpdateManyMutationInput {
  contentHTML: String
  contentText: String
  imageCredit: String
  imageURL: String
  isPublished: Boolean
  metaTitle: String
  metaDescription: String
  sourceCredit: String
  sourceURL: String
  tags: BitUpdatetagsInput
}

input BitUpdatetagsInput {
  set: [String!]
}

input BitWhereInput {
  """Logical AND on all given filters."""
  AND: [BitWhereInput!]

  """Logical OR on all given filters."""
  OR: [BitWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BitWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  contentHTML: String

  """All values that are not equal to given value."""
  contentHTML_not: String

  """All values that are contained in given list."""
  contentHTML_in: [String!]

  """All values that are not contained in given list."""
  contentHTML_not_in: [String!]

  """All values less than the given value."""
  contentHTML_lt: String

  """All values less than or equal the given value."""
  contentHTML_lte: String

  """All values greater than the given value."""
  contentHTML_gt: String

  """All values greater than or equal the given value."""
  contentHTML_gte: String

  """All values containing the given string."""
  contentHTML_contains: String

  """All values not containing the given string."""
  contentHTML_not_contains: String

  """All values starting with the given string."""
  contentHTML_starts_with: String

  """All values not starting with the given string."""
  contentHTML_not_starts_with: String

  """All values ending with the given string."""
  contentHTML_ends_with: String

  """All values not ending with the given string."""
  contentHTML_not_ends_with: String
  contentText: String

  """All values that are not equal to given value."""
  contentText_not: String

  """All values that are contained in given list."""
  contentText_in: [String!]

  """All values that are not contained in given list."""
  contentText_not_in: [String!]

  """All values less than the given value."""
  contentText_lt: String

  """All values less than or equal the given value."""
  contentText_lte: String

  """All values greater than the given value."""
  contentText_gt: String

  """All values greater than or equal the given value."""
  contentText_gte: String

  """All values containing the given string."""
  contentText_contains: String

  """All values not containing the given string."""
  contentText_not_contains: String

  """All values starting with the given string."""
  contentText_starts_with: String

  """All values not starting with the given string."""
  contentText_not_starts_with: String

  """All values ending with the given string."""
  contentText_ends_with: String

  """All values not ending with the given string."""
  contentText_not_ends_with: String
  imageCredit: String

  """All values that are not equal to given value."""
  imageCredit_not: String

  """All values that are contained in given list."""
  imageCredit_in: [String!]

  """All values that are not contained in given list."""
  imageCredit_not_in: [String!]

  """All values less than the given value."""
  imageCredit_lt: String

  """All values less than or equal the given value."""
  imageCredit_lte: String

  """All values greater than the given value."""
  imageCredit_gt: String

  """All values greater than or equal the given value."""
  imageCredit_gte: String

  """All values containing the given string."""
  imageCredit_contains: String

  """All values not containing the given string."""
  imageCredit_not_contains: String

  """All values starting with the given string."""
  imageCredit_starts_with: String

  """All values not starting with the given string."""
  imageCredit_not_starts_with: String

  """All values ending with the given string."""
  imageCredit_ends_with: String

  """All values not ending with the given string."""
  imageCredit_not_ends_with: String
  imageURL: String

  """All values that are not equal to given value."""
  imageURL_not: String

  """All values that are contained in given list."""
  imageURL_in: [String!]

  """All values that are not contained in given list."""
  imageURL_not_in: [String!]

  """All values less than the given value."""
  imageURL_lt: String

  """All values less than or equal the given value."""
  imageURL_lte: String

  """All values greater than the given value."""
  imageURL_gt: String

  """All values greater than or equal the given value."""
  imageURL_gte: String

  """All values containing the given string."""
  imageURL_contains: String

  """All values not containing the given string."""
  imageURL_not_contains: String

  """All values starting with the given string."""
  imageURL_starts_with: String

  """All values not starting with the given string."""
  imageURL_not_starts_with: String

  """All values ending with the given string."""
  imageURL_ends_with: String

  """All values not ending with the given string."""
  imageURL_not_ends_with: String
  isPublished: Boolean

  """All values that are not equal to given value."""
  isPublished_not: Boolean
  metaTitle: String

  """All values that are not equal to given value."""
  metaTitle_not: String

  """All values that are contained in given list."""
  metaTitle_in: [String!]

  """All values that are not contained in given list."""
  metaTitle_not_in: [String!]

  """All values less than the given value."""
  metaTitle_lt: String

  """All values less than or equal the given value."""
  metaTitle_lte: String

  """All values greater than the given value."""
  metaTitle_gt: String

  """All values greater than or equal the given value."""
  metaTitle_gte: String

  """All values containing the given string."""
  metaTitle_contains: String

  """All values not containing the given string."""
  metaTitle_not_contains: String

  """All values starting with the given string."""
  metaTitle_starts_with: String

  """All values not starting with the given string."""
  metaTitle_not_starts_with: String

  """All values ending with the given string."""
  metaTitle_ends_with: String

  """All values not ending with the given string."""
  metaTitle_not_ends_with: String
  metaDescription: String

  """All values that are not equal to given value."""
  metaDescription_not: String

  """All values that are contained in given list."""
  metaDescription_in: [String!]

  """All values that are not contained in given list."""
  metaDescription_not_in: [String!]

  """All values less than the given value."""
  metaDescription_lt: String

  """All values less than or equal the given value."""
  metaDescription_lte: String

  """All values greater than the given value."""
  metaDescription_gt: String

  """All values greater than or equal the given value."""
  metaDescription_gte: String

  """All values containing the given string."""
  metaDescription_contains: String

  """All values not containing the given string."""
  metaDescription_not_contains: String

  """All values starting with the given string."""
  metaDescription_starts_with: String

  """All values not starting with the given string."""
  metaDescription_not_starts_with: String

  """All values ending with the given string."""
  metaDescription_ends_with: String

  """All values not ending with the given string."""
  metaDescription_not_ends_with: String
  sourceCredit: String

  """All values that are not equal to given value."""
  sourceCredit_not: String

  """All values that are contained in given list."""
  sourceCredit_in: [String!]

  """All values that are not contained in given list."""
  sourceCredit_not_in: [String!]

  """All values less than the given value."""
  sourceCredit_lt: String

  """All values less than or equal the given value."""
  sourceCredit_lte: String

  """All values greater than the given value."""
  sourceCredit_gt: String

  """All values greater than or equal the given value."""
  sourceCredit_gte: String

  """All values containing the given string."""
  sourceCredit_contains: String

  """All values not containing the given string."""
  sourceCredit_not_contains: String

  """All values starting with the given string."""
  sourceCredit_starts_with: String

  """All values not starting with the given string."""
  sourceCredit_not_starts_with: String

  """All values ending with the given string."""
  sourceCredit_ends_with: String

  """All values not ending with the given string."""
  sourceCredit_not_ends_with: String
  sourceURL: String

  """All values that are not equal to given value."""
  sourceURL_not: String

  """All values that are contained in given list."""
  sourceURL_in: [String!]

  """All values that are not contained in given list."""
  sourceURL_not_in: [String!]

  """All values less than the given value."""
  sourceURL_lt: String

  """All values less than or equal the given value."""
  sourceURL_lte: String

  """All values greater than the given value."""
  sourceURL_gt: String

  """All values greater than or equal the given value."""
  sourceURL_gte: String

  """All values containing the given string."""
  sourceURL_contains: String

  """All values not containing the given string."""
  sourceURL_not_contains: String

  """All values starting with the given string."""
  sourceURL_starts_with: String

  """All values not starting with the given string."""
  sourceURL_not_starts_with: String

  """All values ending with the given string."""
  sourceURL_ends_with: String

  """All values not ending with the given string."""
  sourceURL_not_ends_with: String
}

input BitWhereUniqueInput {
  id: ID
}

scalar DateTime

type Entry implements Node {
  id: ID!
  description: String!
  title: String!
}

"""A connection to a list of items."""
type EntryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [EntryEdge]!
  aggregate: AggregateEntry!
}

input EntryCreateInput {
  description: String!
  title: String!
}

"""An edge in a connection."""
type EntryEdge {
  """The item at the end of the edge."""
  node: Entry!

  """A cursor for use in pagination."""
  cursor: String!
}

enum EntryOrderByInput {
  id_ASC
  id_DESC
  description_ASC
  description_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type EntryPreviousValues {
  id: ID!
  description: String!
  title: String!
}

type EntrySubscriptionPayload {
  mutation: MutationType!
  node: Entry
  updatedFields: [String!]
  previousValues: EntryPreviousValues
}

input EntrySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [EntrySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [EntrySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EntrySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: EntryWhereInput
}

input EntryUpdateInput {
  description: String
  title: String
}

input EntryUpdateManyMutationInput {
  description: String
  title: String
}

input EntryWhereInput {
  """Logical AND on all given filters."""
  AND: [EntryWhereInput!]

  """Logical OR on all given filters."""
  OR: [EntryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EntryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
}

input EntryWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createBit(data: BitCreateInput!): Bit!
  createTag(data: TagCreateInput!): Tag!
  createUser(data: UserCreateInput!): User!
  createEntry(data: EntryCreateInput!): Entry!
  updateBit(data: BitUpdateInput!, where: BitWhereUniqueInput!): Bit
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateEntry(data: EntryUpdateInput!, where: EntryWhereUniqueInput!): Entry
  deleteBit(where: BitWhereUniqueInput!): Bit
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteUser(where: UserWhereUniqueInput!): User
  deleteEntry(where: EntryWhereUniqueInput!): Entry
  upsertBit(where: BitWhereUniqueInput!, create: BitCreateInput!, update: BitUpdateInput!): Bit!
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertEntry(where: EntryWhereUniqueInput!, create: EntryCreateInput!, update: EntryUpdateInput!): Entry!
  updateManyBits(data: BitUpdateManyMutationInput!, where: BitWhereInput): BatchPayload!
  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyEntries(data: EntryUpdateManyMutationInput!, where: EntryWhereInput): BatchPayload!
  deleteManyBits(where: BitWhereInput): BatchPayload!
  deleteManyTags(where: TagWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyEntries(where: EntryWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  DEVELOPER
  ADMIN
  CREATOR
  USER
  PERMISSIONUPDATE
}

type Query {
  bits(where: BitWhereInput, orderBy: BitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Bit]!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  entries(where: EntryWhereInput, orderBy: EntryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Entry]!
  bit(where: BitWhereUniqueInput!): Bit
  tag(where: TagWhereUniqueInput!): Tag
  user(where: UserWhereUniqueInput!): User
  entry(where: EntryWhereUniqueInput!): Entry
  bitsConnection(where: BitWhereInput, orderBy: BitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BitConnection!
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  entriesConnection(where: EntryWhereInput, orderBy: EntryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EntryConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  bit(where: BitSubscriptionWhereInput): BitSubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  entry(where: EntrySubscriptionWhereInput): EntrySubscriptionPayload
}

type Tag implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  metaTitle: String
  metaDescription: String
}

"""A connection to a list of items."""
type TagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  name: String!
  metaTitle: String
  metaDescription: String
}

"""An edge in a connection."""
type TagEdge {
  """The item at the end of the edge."""
  node: Tag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  metaTitle_ASC
  metaTitle_DESC
  metaDescription_ASC
  metaDescription_DESC
}

type TagPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  metaTitle: String
  metaDescription: String
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TagWhereInput
}

input TagUpdateInput {
  name: String
  metaTitle: String
  metaDescription: String
}

input TagUpdateManyMutationInput {
  name: String
  metaTitle: String
  metaDescription: String
}

input TagWhereInput {
  """Logical AND on all given filters."""
  AND: [TagWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  metaTitle: String

  """All values that are not equal to given value."""
  metaTitle_not: String

  """All values that are contained in given list."""
  metaTitle_in: [String!]

  """All values that are not contained in given list."""
  metaTitle_not_in: [String!]

  """All values less than the given value."""
  metaTitle_lt: String

  """All values less than or equal the given value."""
  metaTitle_lte: String

  """All values greater than the given value."""
  metaTitle_gt: String

  """All values greater than or equal the given value."""
  metaTitle_gte: String

  """All values containing the given string."""
  metaTitle_contains: String

  """All values not containing the given string."""
  metaTitle_not_contains: String

  """All values starting with the given string."""
  metaTitle_starts_with: String

  """All values not starting with the given string."""
  metaTitle_not_starts_with: String

  """All values ending with the given string."""
  metaTitle_ends_with: String

  """All values not ending with the given string."""
  metaTitle_not_ends_with: String
  metaDescription: String

  """All values that are not equal to given value."""
  metaDescription_not: String

  """All values that are contained in given list."""
  metaDescription_in: [String!]

  """All values that are not contained in given list."""
  metaDescription_not_in: [String!]

  """All values less than the given value."""
  metaDescription_lt: String

  """All values less than or equal the given value."""
  metaDescription_lte: String

  """All values greater than the given value."""
  metaDescription_gt: String

  """All values greater than or equal the given value."""
  metaDescription_gte: String

  """All values containing the given string."""
  metaDescription_contains: String

  """All values not containing the given string."""
  metaDescription_not_contains: String

  """All values starting with the given string."""
  metaDescription_starts_with: String

  """All values not starting with the given string."""
  metaDescription_not_starts_with: String

  """All values ending with the given string."""
  metaDescription_ends_with: String

  """All values not ending with the given string."""
  metaDescription_not_ends_with: String
}

input TagWhereUniqueInput {
  id: ID
  name: String
}

type User implements Node {
  id: ID!
  email: String!
  name: String!
  password: String!
  permissions: [Permission!]!
  resetToken: String
  resetTokenExpiry: Float
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String!
  name: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  name: String!
  password: String!
  permissions: [Permission!]!
  resetToken: String
  resetTokenExpiry: Float
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  name: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  email: String
  name: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
