# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createBit(
    content: String!
    imageCredit: String
    imageURL: String
    metaDescription: String
    metaTitle: String
    sourceCredit: String
    sourceURL: String
    tags: [String!]!
  ): SuccessMessage
  createEntry(title: String, description: String): Entry!
  createTag(name: String!, metaDescription: String, metaTitle: String): Tag!
  deleteBit(id: ID!): Bit
  deleteTag(id: ID!): Tag
  registerUser(email: String!, password: String!, name: String!): User!
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage
  updateBit(
    content: String!
    id: ID!
    imageCredit: String
    imageURL: String
    isPublished: Boolean
    metaDescription: String
    metaTitle: String
    sourceCredit: String
    sourceURL: String
    tags: [String!]!
  ): Bit!
  updateTag(
    id: ID!
    name: String
    metaDescription: String
    metaTitle: String
  ): Tag!
}

type Query {
  bit(where: BitWhereUniqueInput!): Bit
  bits(
    where: BitWhereInput
    orderBy: BitOrderByInput
    skip: Int
    first: Int
  ): [Bit!]
  bitsConnection(where: BitWhereInput): BitConnection!
  currentUser: User
  entries: [Entry]!
  tag(where: TagWhereUniqueInput!): Tag
  tags(
    where: TagWhereInput
    orderBy: TagOrderByInput
    skip: Int
    first: Int
  ): [Tag!]
  tagsConnection(where: TagWhereInput): TagConnection!
}
