# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createBit(
    content: String!
    imageCredit: String
    imageURL: String
    metaDescription: String
    metaTitle: String
    sourceCredit: String
    sourceURL: String
    tagIds: [String!]!
  ): SuccessMessage
  createTag(
    name: String!
    metaDescription: String
    metaTitle: String
  ): SuccessMessage
  deleteBit(id: ID!): SuccessMessage
  deleteTag(id: ID!): SuccessMessage
  registerUser(email: String!, password: String!, name: String!): User!
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage
  updateBit(
    content: String!
    id: ID!
    imageCredit: String
    imageURL: String
    isPublished: Boolean
    metaDescription: String
    metaTitle: String
    sourceCredit: String
    sourceURL: String
    tagIds: [String!]!
  ): SuccessMessage
  updateTag(
    id: ID!
    name: String
    metaDescription: String
    metaTitle: String
  ): SuccessMessage
}

type Query {
  bit(where: BitWhereUniqueInput!): Bit
  bits(
    where: BitWhereInput
    orderBy: BitOrderByInput
    skip: Int
    first: Int
  ): [Bit!]
  bitsConnection(where: BitWhereInput): BitConnection!
  currentUser: User
  tag(where: TagWhereUniqueInput!): Tag
  tags(
    where: TagWhereInput
    orderBy: TagOrderByInput
    skip: Int
    first: Int
  ): [Tag!]
  tagsConnection(where: TagWhereInput): TagConnection!
}
